name: Build Android App

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build Android App (.apk + .so)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Ensure jniLibs directory exists
        run: mkdir -p app/src/main/jniLibs/arm64-v8a

      - name: Download latest libtruth_core.so from truth-training (build-android.yml)
        id: download_so_1
        uses: dawidd6/action-download-artifact@v6
        continue-on-error: true
        with:
          github_token: ${{ secrets.TRUTH_TRAINING_TOKEN || github.token }}
          workflow: build-android.yml
          repo: ekwator/truth-training
          workflow_conclusion: success
          name: truth-android-build
          path: app/src/main/jniLibs/arm64-v8a
          if_no_artifact_found: warn

      - name: Fallback - download from "Build Android Core" workflow
        id: download_so_2
        if: steps.download_so_1.outcome == 'failure'
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.TRUTH_TRAINING_TOKEN || github.token }}
          workflow: Build Android Core
          repo: ekwator/truth-training
          workflow_conclusion: success
          name: truth-android-build
          path: app/src/main/jniLibs/arm64-v8a
          if_no_artifact_found: fail

      - name: Prepare libtruth_core.so
        run: |
          ARTIFACT_DIR=app/src/main/jniLibs/arm64-v8a
          # Если скачался ZIP, распаковываем
          if [ -f "$ARTIFACT_DIR/truth-android-build.zip" ]; then
            unzip -o "$ARTIFACT_DIR/truth-android-build.zip" -d "$ARTIFACT_DIR"
            # Копируем .so в корень arm64-v8a
            find "$ARTIFACT_DIR" -name "libtruth_core.so" -exec cp {} "$ARTIFACT_DIR/" \;
          fi
          # Если .so скачан напрямую (не ZIP), ничего не делаем
          if [ ! -f "$ARTIFACT_DIR/libtruth_core.so" ]; then
            echo "libtruth_core.so not found in $ARTIFACT_DIR"
            exit 1
          else
            echo "libtruth_core.so is ready in $ARTIFACT_DIR"
          fi

      - name: Verify native library was downloaded
        run: test -f app/src/main/jniLibs/arm64-v8a/libtruth_core.so

      - name: Ensure Gradle permissions
        run: chmod +x ./gradlew

      - name: Build Android app (Debug)
        run: ./gradlew --no-daemon assembleDebug

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: truth-android-app
          path: |
            app/build/outputs/apk/debug/app-debug.apk
            app/src/main/jniLibs/arm64-v8a/libtruth_core.so
          if-no-files-found: error
